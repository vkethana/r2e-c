09/12/2024 05:45:04 PM logger_zpl-c___librg INFO <<<<<<<<<<<<<<<<<< Logger setup anew <<<<<<<<<<<<<<<<<<< (utils.py:39) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Analyzing repos/repos_400_c_round_two/zpl-c___librg (install_repos.py:285) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running make (install_repos.py:51) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running command: make clean (install_repos.py:20) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Logging output to: logs/repos/repos_400_c_round_two_install_logs_with_make_cmake_gradlew_meson_scons_bazel_2024-09-12_17-35-05/zpl-c___librg_build.log (install_repos.py:21) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg DEBUG > Cleaning up files (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running command: make distclean (install_repos.py:20) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Logging output to: logs/repos/repos_400_c_round_two_install_logs_with_make_cmake_gradlew_meson_scons_bazel_2024-09-12_17-35-05/zpl-c___librg_build.log (install_repos.py:21) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg DEBUG make: *** No rule to make target 'distclean'.  Stop. (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running command: rm -rf autom4te.cache (install_repos.py:20) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Logging output to: logs/repos/repos_400_c_round_two_install_logs_with_make_cmake_gradlew_meson_scons_bazel_2024-09-12_17-35-05/zpl-c___librg_build.log (install_repos.py:21) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running command: rm -f config.status config.cache config.log (install_repos.py:20) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Logging output to: logs/repos/repos_400_c_round_two_install_logs_with_make_cmake_gradlew_meson_scons_bazel_2024-09-12_17-35-05/zpl-c___librg_build.log (install_repos.py:21) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running autogen (install_repos.py:57) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running command: ./autogen (install_repos.py:20) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Logging output to: logs/repos/repos_400_c_round_two_install_logs_with_make_cmake_gradlew_meson_scons_bazel_2024-09-12_17-35-05/zpl-c___librg_build.log (install_repos.py:21) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg DEBUG /bin/sh: 1: ./autogen: not found (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running ./configure (install_repos.py:61) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running command: ./configure (install_repos.py:20) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Logging output to: logs/repos/repos_400_c_round_two_install_logs_with_make_cmake_gradlew_meson_scons_bazel_2024-09-12_17-35-05/zpl-c___librg_build.log (install_repos.py:21) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg DEBUG /bin/sh: 1: ./configure: not found (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running make (install_repos.py:69) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Running command: make (install_repos.py:20) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg INFO Logging output to: logs/repos/repos_400_c_round_two_install_logs_with_make_cmake_gradlew_meson_scons_bazel_2024-09-12_17-35-05/zpl-c___librg_build.log (install_repos.py:21) (zpl-c___librg)
09/12/2024 05:45:04 PM logger_zpl-c___librg DEBUG > Building example-enet (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:05 PM logger_zpl-c___librg DEBUG > Building example-packing (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:06 PM logger_zpl-c___librg DEBUG > Building example-simple (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:07 PM logger_zpl-c___librg DEBUG > Building example-unpacking (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:08 PM logger_zpl-c___librg DEBUG > Building example-world (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:08 PM logger_zpl-c___librg DEBUG > Building library (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:09 PM logger_zpl-c___librg DEBUG > Building manual-testing (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:10 PM logger_zpl-c___librg DEBUG > Building query-performance (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:11 PM logger_zpl-c___librg DEBUG > Building apps (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:11 PM logger_zpl-c___librg DEBUG > Building unit (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG > Building unit tests (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG > testing suite: (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG *   suite: librg (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * modules: 4 (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG module: general (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to allocate and free an instance (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be return proper check for is valid (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should allow to set and retrieve a custom userdata (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly set a chunk world size (amount) (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should force world size to have at least one chunk in each direction (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly set a chunk size (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly set a chunk offsets (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly handle set of chunk line calculations (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should correctly calculate weird world sizes (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should correctly calculate chunk id for 2d top-left mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should correctly calculate chunk id for 2d mid-mid (centered) mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should correctly calculate chunk id for 2d bottom-right mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should correctly calculate chunk id for 3d top-left mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should correctly calculate chunk id for 3d mid-mid (centered) mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should correctly calculate chunk id for 3d bottom-right mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should calculate chunk id from a floating position in 2d top-left mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should calculate chunk id from a floating position in 3d top-left mode (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should calculate chunk coords from chunk id from weird world size (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should calculate chunk coords from chunk id from world size 3x3 and offsets (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should calculate chunk coords from chunk id from world size 4x4 and offsets (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG results: 20 total, 0 failed[0m, [32m20 passed[0m (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG module: entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to track and untrack an entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to properly set a userdata (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to properly set a chunk (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to properly set an owner (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to properly set a dimension (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to properly set an array of chunks (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to properly set an array of chunks with overflow (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should fail when attempting to set data onto untracked entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG results: 8 total, 0 failed[0m, [32m8 passed[0m (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG module: query (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to fetch all tracked entities (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to fetch entities within a chunk (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to fetch entities from chunk array (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to fetch entities from owner array (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should be able to query and return empty result (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query and return with own entities for owner (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query and return with own entities for owner from multi dimensions (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query within same chunk (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query within same chunk but different dimensions (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query multiple owned entities in same chunk across multiple dimensions (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query entities using spherical check (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly exclude globally-invisible entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly include always-globally-visible entity without regards of chunk radius (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly include always-globally-visible entity without regards of dimension (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly exclude owner-invisible entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly exclude owner-invisible own entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly include default-owner-visible entity without regards of chunk radius (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly include default-owner-visible entity without regards of dimension (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should properly exclude owner-invisible entity overriding always-globally-visible (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should exclude default-owner-visible entity overriding always-globally-visible (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query entities with boundary checks on top-left (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query entities with boundary checks on mid-mid (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query entities with 0 radius (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should query entities within big worlds (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It it should run query with exact value on limit (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It it should properly calculate recommended size for the query (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG results: 26 total, 0 failed[0m, [32m26 passed[0m (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG module: packing (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write create for single entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write create section (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write create section with extra data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should skip writing create section with rejection and ignore data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write create section with size limit (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write create section with size limit and give rest on second call (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write create section with limit + data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write create section with limit and give rest on second call + data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write update section (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write update for single entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write update section with extra data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should skip writing update section with rejection and ignore data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write update section with size limit (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write update section with size limit and repeat same on second call (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write update section with limit + data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write update section with limit and give repeat same on second call + data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write remove section (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write remove section with extra data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should write remove section on second call if first was limited (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should skip writing remove section with rejection and ignore data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should read create for single entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should fail to read create for single entity with extra data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should fail to read create for single entity with invalid data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should read created entity should be foreign, and untrack should error out (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should read create for single entity, and call error event if entity is already tracked (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should read update for single entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should fail to read update for single entity with extra data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should fail to read update for single entity with invalid data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should read updated entity should be foreign, and error out if it is not (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should read remove for single entity (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should fail to read remove for single entity with extra data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should fail to read remove for single entity with invalid data (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should prevent foreign entity from be untracked manually (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should read update backwards (from foreign entity) and call update event (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * [[32mPASS[0m]: It should not read update backwards (from foreign entity) if token has changed (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG results: 35 total, 0 failed[0m, [32m35 passed[0m (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG -------------------------------------- (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG > total: (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * modules: 4 total, 0 failed[0m, [32m4 passed[0m (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG * tests:   89 total, 0 failed[0m, [32m89 passed[0m (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg DEBUG  (install_repos.py:38) (zpl-c___librg)
09/12/2024 05:45:12 PM logger_zpl-c___librg INFO Success: Build succeeded for zpl-c___librg (install_repos.py:292) (zpl-c___librg)
